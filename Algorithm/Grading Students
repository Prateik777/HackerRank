import java.io.*;
import java.math.*;
import java.text.*;
import java.util.*;
import java.util.regex.*;

public class Solution {

    /*
     * Complete the gradingStudents function below.
     */
    static int[] gradingStudents(int[] grades) {
        /*
         * Write your code here.
         */
        int unit = 0;
        int tens = 0;
       // int temp = 0;
        int roundOff = 0;
        int diff = 0;
        for(int i = 0; i < grades.length; i++){
            if(grades[i] < 38){
                continue;
            }
            else{
                unit = grades[i] % 10;
                tens = grades[i] / 10;
                if(unit < 5){
                    roundOff = (tens * 10) + 5;
                }
                else if(unit >= 5){
                    tens++;
                    roundOff = tens * 10;
                }
                diff = roundOff - grades[i];
                if(diff < 3)
                    grades[i] = roundOff;
                else{
                    
                }
            }
        }
        
        return grades;
       /* for(int j = 0; j < grades.length; j++){
            System.out.println(grades[j]);
        }*/

    }

    private static final Scanner scan = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bw = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(scan.nextLine().trim());

        int[] grades = new int[n];

        for (int gradesItr = 0; gradesItr < n; gradesItr++) {
            int gradesItem = Integer.parseInt(scan.nextLine().trim());
            grades[gradesItr] = gradesItem;
        }

        int[] result = gradingStudents(grades);

        for (int resultItr = 0; resultItr < result.length; resultItr++) {
            bw.write(String.valueOf(result[resultItr]));

            if (resultItr != result.length - 1) {
                bw.write("\n");
            }
        }

        bw.newLine();

        bw.close();
    }
}
